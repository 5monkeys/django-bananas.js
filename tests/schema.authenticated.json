{
    "basePath": "/api/v1.0",
    "consumes": [
        "application/json"
    ],
    "definitions": {
        "Form": {
            "properties": {
                "boolean": {
                    "title": "Boolean",
                    "type": "boolean"
                },
                "choices": {
                    "enum": [
                        "se",
                        "no",
                        "fi",
                        "dk"
                    ],
                    "title": "Choices",
                    "type": "string"
                },
                "date": {
                    "format": "date",
                    "title": "Date",
                    "type": "string"
                },
                "datetime": {
                    "format": "date-time",
                    "title": "Datetime",
                    "type": "string"
                },
                "integer": {
                    "title": "Integer",
                    "type": "integer"
                },
                "multiple_choices": {
                    "items": {
                        "enum": [
                            "se",
                            "no",
                            "fi",
                            "dk"
                        ],
                        "type": "string"
                    },
                    "type": "array"
                },
                "text": {
                    "minLength": 1,
                    "title": "Text",
                    "type": "string"
                }
            },
            "required": [
                "text",
                "integer",
                "date",
                "datetime",
                "boolean",
                "choices",
                "multiple_choices"
            ],
            "type": "object"
        },
        "PasswordChange": {
            "properties": {
                "new_password1": {
                    "description": "['Ditt l\u00f6senord kan inte vara alltf\u00f6r lik din personliga information.', 'Ditt l\u00f6senord m\u00e5ste inneh\u00e5lla minst 8 tecken.', 'Ditt l\u00f6senord kan inte vara ett allm\u00e4nt anv\u00e4nt l\u00f6senord.', 'Ditt l\u00f6senord kan inte bara vara numeriskt.']",
                    "minLength": 1,
                    "title": "Nytt l\u00f6senord",
                    "type": "string"
                },
                "new_password2": {
                    "minLength": 1,
                    "title": "Bekr\u00e4fta nytt l\u00f6senord",
                    "type": "string"
                },
                "old_password": {
                    "minLength": 1,
                    "title": "Gammalt l\u00f6senord",
                    "type": "string"
                }
            },
            "required": [
                "old_password",
                "new_password1",
                "new_password2"
            ],
            "type": "object"
        },
        "User": {
            "properties": {
                "email": {
                    "minLength": 1,
                    "readOnly": true,
                    "title": "Email",
                    "type": "string"
                },
                "full_name": {
                    "description": "Falls back to username, if not implemented or empty",
                    "minLength": 1,
                    "readOnly": true,
                    "title": "Full name",
                    "type": "string"
                },
                "groups": {
                    "items": {
                        "type": "string"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "id": {
                    "readOnly": true,
                    "title": "ID",
                    "type": "integer"
                },
                "is_superuser": {
                    "readOnly": true,
                    "title": "Is superuser",
                    "type": "boolean"
                },
                "permissions": {
                    "description": "Permissions that the user has, both through group and user permissions.",
                    "items": {
                        "type": "string"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "username": {
                    "minLength": 1,
                    "readOnly": true,
                    "title": "Username",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "UserDetails": {
            "properties": {
                "email": {
                    "format": "email",
                    "maxLength": 254,
                    "title": "E-postadress",
                    "type": "string"
                },
                "full_name": {
                    "minLength": 1,
                    "readOnly": true,
                    "title": "Full name",
                    "type": "string"
                },
                "id": {
                    "readOnly": true,
                    "title": "ID",
                    "type": "integer"
                },
                "is_staff": {
                    "description": "Avg\u00f6r om anv\u00e4ndaren kan logga in p\u00e5 denna adminsida.",
                    "title": "Personalstatus",
                    "type": "boolean"
                },
                "url": {
                    "format": "uri",
                    "readOnly": true,
                    "title": "Url",
                    "type": "string"
                },
                "username": {
                    "description": "Obligatoriskt. 150 tecken eller f\u00e4rre. Endast bokst\u00e4ver, siffror och @/./+/-/_.",
                    "maxLength": 150,
                    "minLength": 1,
                    "pattern": "^[\\w.@+-]+$",
                    "title": "Anv\u00e4ndarnamn",
                    "type": "string"
                }
            },
            "required": [
                "username"
            ],
            "type": "object"
        }
    },
    "host": "foo.bar",
    "info": {
        "description": "API for django-bananas.js",
        "title": "Django Bananas Admin API Schema",
        "version": "v1.0"
    },
    "paths": {
        "/bananas/change_password/": {
            "parameters": [],
            "post": {
                "description": "Change password for logged in django staff user",
                "operationId": "bananas.change_password:create",
                "parameters": [
                    {
                        "in": "body",
                        "name": "data",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PasswordChange"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "summary": "\u00c4ndra l\u00f6senord",
                "tags": [
                    "app:bananas"
                ]
            }
        },
        "/bananas/i18n/": {
            "get": {
                "description": "Retrieve the translation catalog.",
                "operationId": "bananas.i18n:list",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "summary": "Translation catalog",
                "tags": [
                    "app:bananas"
                ]
            },
            "parameters": []
        },
        "/bananas/logout/": {
            "parameters": [],
            "post": {
                "description": "Log out django staff user",
                "operationId": "bananas.logout:create",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "summary": "Logga ut",
                "tags": [
                    "app:bananas"
                ]
            }
        },
        "/bananas/me/": {
            "get": {
                "description": "Retrieve logged in user info",
                "operationId": "bananas.me:list",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                },
                "summary": "Me",
                "tags": [
                    "app:bananas"
                ]
            },
            "parameters": []
        },
        "/example/user/": {
            "get": {
                "description": "",
                "operationId": "example.user:list",
                "parameters": [
                    {
                        "in": "query",
                        "minLength": 1,
                        "name": "username",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/UserDetails"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "Anv\u00e4ndare",
                "tags": [
                    "app:example",
                    "navigation",
                    "crud"
                ]
            },
            "parameters": [],
            "post": {
                "description": "",
                "operationId": "example.user:create",
                "parameters": [
                    {
                        "in": "body",
                        "name": "data",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                },
                "summary": "L\u00e4gg till anv\u00e4ndare",
                "tags": [
                    "app:example",
                    "crud"
                ]
            }
        },
        "/example/user/foo/": {
            "get": {
                "description": "",
                "operationId": "example.user:foo",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/User"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "Foo",
                "tags": [
                    "app:example",
                    "crud"
                ]
            },
            "parameters": []
        },
        "/example/user/form/": {
            "get": {
                "description": "",
                "operationId": "example.user:form.read",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/Form"
                            },
                            "type": "array"
                        }
                    }
                },
                "summary": "Form",
                "tags": [
                    "app:example",
                    "crud"
                ]
            },
            "parameters": [],
            "post": {
                "description": "",
                "operationId": "example.user:form.create",
                "parameters": [
                    {
                        "in": "body",
                        "name": "data",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Form"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Form"
                        }
                    }
                },
                "summary": "Form",
                "tags": [
                    "app:example",
                    "crud"
                ]
            }
        },
        "/example/user/{id}/": {
            "delete": {
                "description": "",
                "operationId": "example.user:delete",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "summary": "Anv\u00e4ndare",
                "tags": [
                    "app:example",
                    "crud"
                ]
            },
            "get": {
                "description": "",
                "operationId": "example.user:read",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/UserDetails"
                        }
                    }
                },
                "summary": "Anv\u00e4ndare",
                "tags": [
                    "app:example",
                    "crud"
                ]
            },
            "parameters": [
                {
                    "description": "A unique integer value identifying this anv\u00e4ndare.",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "type": "integer"
                }
            ],
            "patch": {
                "description": "",
                "operationId": "example.user:partial_update",
                "parameters": [
                    {
                        "in": "body",
                        "name": "data",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                },
                "summary": "Anv\u00e4ndare",
                "tags": [
                    "app:example",
                    "crud"
                ]
            },
            "put": {
                "description": "",
                "operationId": "example.user:update",
                "parameters": [
                    {
                        "in": "body",
                        "name": "data",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                },
                "summary": "Anv\u00e4ndare",
                "tags": [
                    "app:example",
                    "crud"
                ]
            }
        },
        "/example/user/{id}/bar/": {
            "get": {
                "description": "",
                "operationId": "example.user:bar",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                },
                "summary": "Bar",
                "tags": [
                    "app:example",
                    "crud"
                ]
            },
            "parameters": [
                {
                    "description": "A unique integer value identifying this anv\u00e4ndare.",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/example/user/{id}/baz/{x}/ham/{y}/": {
            "get": {
                "description": "",
                "operationId": "example.user:baz.baz",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                },
                "summary": "Baz",
                "tags": [
                    "app:example",
                    "crud"
                ]
            },
            "parameters": [
                {
                    "description": "A unique integer value identifying this anv\u00e4ndare.",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "type": "integer"
                },
                {
                    "in": "path",
                    "name": "x",
                    "required": true,
                    "type": "string"
                },
                {
                    "in": "path",
                    "name": "y",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/example/user/{id}/send_activation_email/": {
            "parameters": [
                {
                    "description": "A unique integer value identifying this anv\u00e4ndare.",
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "type": "integer"
                }
            ],
            "post": {
                "description": "",
                "operationId": "example.user:send_activation_email",
                "parameters": [
                    {
                        "in": "body",
                        "name": "data",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                },
                "summary": "Send activation e-mail",
                "tags": [
                    "app:example",
                    "crud"
                ]
            }
        },
        "/test/route/": {
            "get": {
                "description": "",
                "operationId": "test.route:list",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "summary": "A test route for listing",
                "tags": [
                    "app:test",
                    "navigation",
                    "crud"
                ]
            },
            "parameters": []
        }
    },
    "produces": [
        "application/json"
    ],
    "schemes": [
        "http"
    ],
    "security": [
        {
            "Basic": []
        }
    ],
    "securityDefinitions": {
        "Basic": {
            "type": "basic"
        }
    },
    "swagger": "2.0"
}
